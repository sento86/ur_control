#!/usr/bin/env python
PACKAGE = "ur_control"

from dynamic_reconfigure.parameter_generator_catkin import *

from math import pi

gen = ParameterGenerator()

gen.add("reset_pose",   bool_t,   0, "A Boolean parameter to reset model",  False)
gen.add("set_pose",     bool_t,   0, "A Boolean parameter to set model",    False)

frame_enum = gen.enum([gen.const("World",  int_t, 0, "World reference frame"),
                       gen.const("Link_1", int_t, 1, "Link 1 reference frame"),
                       gen.const("Link_2", int_t, 2, "Link 2 reference frame"),
                       gen.const("Link_3", int_t, 3, "Link 3 reference frame"),
                       gen.const("Link_4", int_t, 4, "Link 4 reference frame"),
                       gen.const("Link_5", int_t, 5, "Link 5 reference frame"),
                       gen.const("Link_6", int_t, 6, "Link 6 reference frame"),
                       gen.const("Link_FT", int_t, 7, "FT reference frame")],
                       "An enum to set reference frame for Gazebo set model service")

gen.add("frame", int_t, 0, "A size parameter which is edited via an enum", 7, 0, 7, edit_method=frame_enum)

#gen.add("x",  double_t, 0, "X position",    0.02,  -10.0,   10.0)
#gen.add("y",  double_t, 0, "Y position",     0.1,  -10.0,   10.0)
gen.add("x",  double_t, 0, "X position",     0.1,  -10.0,   10.0)
gen.add("y",  double_t, 0, "Y position",   -0.02,  -10.0,   10.0)
gen.add("z",  double_t, 0, "Z position",     0.0,  -10.0,   10.0)

ref_enum = gen.enum([ gen.const("Step",   int_t, 0, "Step reference"),
                      gen.const("Spline", int_t, 1, "Spline reference"),
                      gen.const("Bezier", int_t, 2, "Bezier reference"),
                      gen.const("Poly",   int_t, 3, "Polynomial reference")],
                     "An enum to set trajectory primitive")

gen.add("reference", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 3, edit_method=ref_enum)

gen.add("joint",    int_t,    0, "An Integer to set active joint",  6,  1, 6)

gen.add("angle_init",  double_t, 0, "Initial angle",  0.0,  -3.1416,   3.1416)
gen.add("angle_final", double_t, 0,   "Final angle",  0.0,  -3.1416,   3.1416)
gen.add("delay",       double_t, 0,  "Elapsed time",  0.5,      0.0,      1.0)

gen.add("go_home",   bool_t,   0, "Reset joints position to default values",  False)

gen.add("run",   bool_t,   0, "A Boolean parameter",  False)

exit(gen.generate(PACKAGE, "ur_control", "ur"))

